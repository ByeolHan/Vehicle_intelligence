데이터 설명
대규모의 객체 탐지, 분류, 라벨링 데이터셋이다. coco 2014년, coco 2017년, coco 2017_panoptic 버전이 있으며 2014와 2017 버전은 동일한 이미지를 사용하지만 데이터셋 분할 비율이 다르다. 테스트 셋에는 주석이 없다. 91개의 클래스를 정의하지만 데이터에서는 80개의 클래스만 사용한다. Panoptic은 200개의 클래스를 정의하지만 133개만 사용한다.
양
coco 2014년 버전은 train 데이터 82,783개, validation 데이터 40,504개, test 데이터 40,775개, test 2015 데이터 81,434개로 구성되어 있다.
coco 2017년 버전은 train 데이터 118,287개, validation 데이터 5,000개, test 데이터 40,670개로 구성되어 있다.
coco 2017_panoptic 버전은 train 데이터 118,287개, validation 데이터 5,000개로 구성되어 있다.
클래스
2014년 버전과 2017년 버전은 91개의 클래스를 정의하지만 데이터에서는 80개의 클래스만 사용한다. Panotptic은 200개의 클래스를 정의하지만 133개만 사용한다.
세부요소 (Feature)
coco 2014년
FeaturesDict({
    'image': Image(shape=(None, None, 3), dtype=tf.uint8),
    'image/filename': Text(shape=(), dtype=tf.string),
    'image/id': tf.int64,
    'objects': Sequence({
        'area': tf.int64,
        'bbox': BBoxFeature(shape=(4,), dtype=tf.float32),
        'id': tf.int64,
        'is_crowd': tf.bool,
        'label': ClassLabel(shape=(), dtype=tf.int64, num_classes=80),
    }),
})
coco 2017년
FeaturesDict({
    'image': Image(shape=(None, None, 3), dtype=tf.uint8),
    'image/filename': Text(shape=(), dtype=tf.string),
    'image/id': tf.int64,
    'objects': Sequence({
        'area': tf.int64,
        'bbox': BBoxFeature(shape=(4,), dtype=tf.float32),
        'id': tf.int64,
        'is_crowd': tf.bool,
        'label': ClassLabel(shape=(), dtype=tf.int64, num_classes=80),
    }),
})
coco 2017_panotptic
FeaturesDict({
    'image': Image(shape=(None, None, 3), dtype=tf.uint8),
    'image/filename': Text(shape=(), dtype=tf.string),
    'image/id': tf.int64,
    'panoptic_image': Image(shape=(None, None, 3), dtype=tf.uint8),
    'panoptic_image/filename': Text(shape=(), dtype=tf.string),
    'panoptic_objects': Sequence({
        'area': tf.int64,
        'bbox': BBoxFeature(shape=(4,), dtype=tf.float32),
        'id': tf.int64,
        'is_crowd': tf.bool,
        'label': ClassLabel(shape=(), dtype=tf.int64, num_classes=133),
    }),
})

데이터 예시

활용 예
이미지내의 사물의 경계를 탐지하는 Detection과 사람을 감지하고 몸을 분할하여 인체의 3d표면에 매핑하는 DensePose, 배경이 아닌 물체를 탐지하는 Stuff등 6개의 분야에서 대회를 진행한다.  Detection, Keypoints, Stuff, Panoptic, Captions의 성능을 확인하는데에도 사용된다. 
COCO데이터셋의 경우 많은 클래스를 정의하고 있어 논문에서 COCO의 카테고리를 사용하기도 한다. ‘U-Net 구조를 이용한 이미지에서의 보행자 분할’(김승택)에서는 자율주행 자동차에서의 보행자 인식 방법을 경계박스로 인해 정보 손실을 줄일 수 있는 보행자 분할 방법을 제시하였는데 COCO 데이터셋의 사람 카테고리를 이용하였다.
